#Imports
import numpy as np

#Initialization
while True:
    n = int(input('dimension of magic square: '))
    if n%2 == 1:
        break
    else:
        print('please input odd number')
            
magic_square = np.zeros((n,n), dtype=int)        

curr_x = n-1
curr_y = int((n-1)/2)
magic_square[curr_x, curr_y] = 1
CHECK_SUM = int(n*(n*n + 1)/2)

#Functions
def check_square():
    sd = sum([magic_square[i,i] for i in range(0,n)])
    sr = sum([magic_square[i,] for i in range(0,n)])
    sc = sum([magic_square[:,i] for i in range(0,n)])
    su = sum([magic_square[n - 1 - i,i] for i in range(0,n)])
   
    return sd == CHECK_SUM and su == CHECK_SUM and np.array_equal(sc, sr) and sc[0] == CHECK_SUM

#Logic
for number in range(2,n*n+1):
    next_x, next_y = (curr_x + 1) % n, (curr_y + 1) % n

    if magic_square[next_x, next_y] != 0:
        next_x, next_y = curr_x - 1, curr_y
   
    magic_square[next_x, next_y] = number
    curr_x, curr_y  = next_x, next_y
   
#Result
print(magic_square)

print(r'sum of each row column and diagonal (n*(n*n + 1)/2): ' + str(CHECK_SUM))
